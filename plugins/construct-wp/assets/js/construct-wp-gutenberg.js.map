{"version":3,"file":"construct-wp-gutenberg.js","mappings":";;;;;;;;;;;;;;;;;;;AAE6B;AAKL;AAGM;AAGN;AAAA,MAAAK,EAAA,GAAAC,+CAAA;AAExB,SAASC,UAAUA,CAAA,EAAG;EAClB,MAAMC,QAAQ,GAAGP,uDAAM,CAAE,aAAc,CAAC,CAACQ,kBAAkB,CAAC,CAAC;EAE7D,IAAKD,QAAQ,KAAK,WAAW,EAAG;IAC5B,OAAO,IAAI;EACf;EAEA,MAAM;IAAEE;EAAK,CAAC,GAAGR,0DAAS,CAAID,MAAM,IAAM;IACtC,OAAO;MACHS,IAAI,EAAET,MAAM,CAAE,aAAc,CAAC,CAACU,iBAAiB,CAAC;IACpD,CAAC;EACL,CAAE,CAAC;EAEH,MAAM;IAAEC;EAAS,CAAC,GAAGT,4DAAW,CAAE,aAAa,EAAE,CAACO,IAAI,CAAE,CAAC;EAEzD,OACIG,EAAA,CAAAC,OAAA,CAAAC,aAAA,CAACf,4EAA0B;IACvBgB,IAAI,EAAC,8BAA8B;IACnCC,KAAK,EAAEZ,EAAE,CAAE,WAAW,EAAE,cAAe;EAAE,GAEzCQ,EAAA,CAAAC,OAAA,CAAAC,aAAA,CAACX,8DAAW;IACRc,KAAK,EAAEb,EAAE,CAAE,yBAAyB,EAAE,cAAe,CAAE;IACvDc,IAAI,EAAEd,EAAE,CAAE,uGAAuG,EAAE,cAAe,CAAE;IACpIe,IAAI,EAAC,MAAM;IACXC,KAAK,EAAGX,IAAM;IACdY,QAAQ,EAAKD,KAAK,IAAMT,QAAQ,CAAE;MAAEF,IAAI,EAAEW;IAAM,CAAE,CAAG;IACrDE,QAAQ;EAAA,CACX,CACuB,CAAC;AAErC;AAEA,+DAAe;EACXP,IAAI,EAAE,OAAO;EACbQ,OAAO,EAAE;IACLC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEnB;EACZ;AACJ,CAAC;;;;;;;;;;;;;;ACrDkD;AAEnB;AAEhC,MAAMqB,MAAM,GAAG,CACXrB,8CAAU,CACb;AAEDqB,MAAM,CAACC,OAAO,CAAIC,KAAK,IAAM;EACzBH,kEAAc,QAAAI,MAAA,CAASD,KAAK,CAACd,IAAI,aAAUc,KAAK,CAACN,OAAQ,CAAC;AAC9D,CAAE,CAAC;AAEH,+DAAeI,MAAM;;;;;;;;;;ACZrB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://construct-wp/./plugins/construct-wp/src/gutenberg/panels/email/index.jsx","webpack://construct-wp/./plugins/construct-wp/src/gutenberg/panels/index.js","webpack://construct-wp/external var \"wp.components\"","webpack://construct-wp/external var \"wp.data\"","webpack://construct-wp/external var \"wp.editPost\"","webpack://construct-wp/external var \"wp.i18n\"","webpack://construct-wp/external var \"wp.plugins\"","webpack://construct-wp/webpack/bootstrap","webpack://construct-wp/webpack/runtime/compat get default export","webpack://construct-wp/webpack/runtime/define property getters","webpack://construct-wp/webpack/runtime/hasOwnProperty shorthand","webpack://construct-wp/webpack/runtime/make namespace object","webpack://construct-wp/./plugins/construct-wp/src/gutenberg/construct-wp-gutenberg.js"],"sourcesContent":["import {\n    PluginDocumentSettingPanel,\n} from '@wordpress/edit-post'\nimport {\n    select,\n    useSelect,\n    useDispatch,\n} from '@wordpress/data'\nimport {\n    TextControl,\n} from '@wordpress/components'\nimport {\n    __,\n} from '@wordpress/i18n'\n\nfunction EmailPanel() {\n    const postType = select( 'core/editor' ).getCurrentPostType()\n\n    if ( postType !== 'cwp_email' ) {\n        return null\n    }\n\n    const { slug } = useSelect( ( select ) => {\n        return {\n            slug: select( 'core/editor' ).getEditedPostSlug(),\n        }\n    } )\n\n    const { editPost } = useDispatch( 'core/editor', [slug] )\n\n    return (\n        <PluginDocumentSettingPanel\n            name=\"ilab-restrict-access-sidebar\"\n            title={__( 'Permalink', 'construct-wp' )}\n        >\n            <TextControl\n                label={__( 'Set the email permalink', 'construct-wp' )}\n                help={__( 'This is used as a reference for this email template. This can be automatically generated on creation.', 'construct-wp' )}\n                type=\"text\"\n                value={ slug }\n                onChange={ ( value ) => editPost( { slug: value } ) }\n                required\n            />\n        </PluginDocumentSettingPanel>\n    )\n}\n\nexport default {\n    name: 'email',\n    options: {\n        icon: '',\n        render: EmailPanel,\n    },\n}\n","import { registerPlugin } from '@wordpress/plugins'\n\nimport EmailPanel from './email'\n\nconst panels = [\n    EmailPanel,\n]\n\npanels.forEach( ( panel ) => {\n    registerPlugin( `cwp-${panel.name}-panel`, panel.options )\n} )\n\nexport default panels\n","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.editPost;","module.exports = wp.i18n;","module.exports = wp.plugins;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './panels'\n"],"names":["PluginDocumentSettingPanel","select","useSelect","useDispatch","TextControl","__","alias__","EmailPanel","postType","getCurrentPostType","slug","getEditedPostSlug","editPost","wp","element","createElement","name","title","label","help","type","value","onChange","required","options","icon","render","registerPlugin","panels","forEach","panel","concat"],"sourceRoot":""}